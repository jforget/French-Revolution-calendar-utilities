# -*- encoding: utf-8; indent-tabs-mode: nil -*-
#
# Generating the list of feasts for cal-french.el from Emacs
# Génération de la liste des fêtes pour cal-french.el d'Emacs
#
# Copyright (C) 2014, Jean Forget
#
# Author: Jean Forget
# Maintainer: Jean Forget
# Keywords: French Revolution, calendar, Emacs
#
# This program is free software; you can redistribute it and modify
# it under the terms of Perl:
# -- either the GNU General Public License as published by
#    the Free Software Foundation; version 1, or (at your option)
#    any later version,
# -- or the Artistic Licence.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Emacs; see the file COPYING. If not, see <http://www.gnu.org/licenses/>.

use utf8;
use v5.10;
use strict;
use warnings;
use Getopt::Long;
use DateTime::Calendar::FrenchRevolutionary;

my @feast_multi;
my @feast_single;
my $max_multi  = 0;
my $max_single = 0;

my %m2s = qw(À A` Â A^ É E' È E` Ê E^ Ë E\\" Î I^ Ï I\\" Ô O^ Ù U` Û U^ œ oe
             à a` â a^ é e' è e` ê e^ ë e\\" î i^ ï i\\" ô o^ ù u` û u^ Œ Oe); # mutibyte to single byte
# Perl is annoyed when entering commas in qw() constructs, so:
$m2s{'ç'} = "c,";
$m2s{'Ç'} = "C,";
my $multi = join '', keys %m2s;

binmode STDOUT, ":utf8";

for my $month (1..12) {
  store_month($month);
  for my $day (1..30) {
    store_day($month, $day);
  }
}
store_month(13);
for my $day (1..6) {
  store_day(13, $day);
}
$feast_multi [-3] = q("de la Raison");
$feast_single[-3] = q("de la Raison");
push @feast_multi,  ('') x 4; # to get a multiple of 5
push @feast_single, ('') x 4; # to get a multiple of 5


my $format = sprintf("%%-%ds ", $max_multi) x 4 . " %s\n";
retrieve(@feast_multi);

$format = sprintf("%%-%ds ", $max_single) x 4 . " %s\n";
retrieve(@feast_single);

sub store_month {
  my ($month) = @_;
  my $date = DateTime::Calendar::FrenchRevolutionary->new(year => 220, month => $month, day => 1, locale => 'fr');
  my $comment = $date->strftime(";; %B");
  push @feast_multi,  $comment;
  push @feast_single, $comment;
}
sub store_day {
  my ($month, $day) = @_;
  my $date = DateTime::Calendar::FrenchRevolutionary->new(year => 220, month => $month, day => $day, locale => 'fr');
  my $feast = $date->strftime(qq{"%EJ"});
  $feast =~ s/^"Jour /"/;
  if (length($feast) > $max_multi) {
    $max_multi = length($feast);
  }
  push @feast_multi,  $feast;

  $feast =~  s/([$multi])/$m2s{$1}/g;
  if (length($feast) > $max_single) {
    $max_single = length($feast);
  }
  push @feast_single, $feast;
}
sub retrieve {
  my @list = @_;
  while (@list) {
    my $c1 = shift @list;
    if (substr($c1, 0, 1) eq ";") {
      say $c1
    }
    else {
      my $c2 = shift @list;
      my $c3 = shift @list;
      my $c4 = shift @list;
      my $c5 = shift @list;
      printf($format, $c1, $c2, $c3, $c4, $c5);
    }
  }
}
__END__ 

=encoding utf8

=head1 NAME / NOM

gen-tests -- a program to generate the list of feasts for F<cal-french.el>

gen-tests -- un programme pour générer la liste des fêtes pour F<cal-french.el>

=head1 UTILISATION

gen-lisp

=head1 CALL PARAMETERS / PARAMÈTRES D'APPEL

None.

Aucun.

=head1 DESCRIPTION (ENGLISH)

This program generates the list  of feasts in the French Revolutionary
calendar, for inclusion in a Lisp program.

=head1 DESCRIPTION (FRANCAIS)

Ce programme génère la liste des fêtes du calendrier républicain, pour
l'inclure dans un programme Lisp.

=head1 CONFIGURATION ET ENVIRONNEMENT

None.

Néant.

=head1 DEPENDENCIES / DÉPENDANCES

F<DateTime>

F<DateTime::Calendar::FrenchRevolutionary> version 0.12

v5.10 : C<say>, F<Getopt::Long> (core module)

=head1 INCOMPATIBILITIES / INCOMPATIBILITÉS

No known incompatibilities.

Aucune incompatibilité identifiée.

=head1 BUGS AND LIMITS

No known bugs in this script.

Yet,   this  program   pointed  out   a   bug  in   version  0.11   of
F<DateTime::Calendar::FrenchRevolutionary>.   The lack of  C<use utf8>
meant that strings as C<Vendémiaire>  or C<Décadi> would be handled by
Perl as ISO-8859 strings C<VendÂ©miaire> and C<DÂ©cadi> but they would
still  be displayed  as correct  UTF-8 strings  on  a UTF-8-configured
xterm.

=head1 BOGUES ET LIMITES

Aucune erreur identifiée dans ce script.

En revanche,  ce programme a  permis d'identifier un problème  dans la
version 0.11 de F<DateTime::Calendar::FrenchRevolutionary>.  L'absence
de C<use  utf8> faisait que  les chaînes telles que  C<Vendémiaire> ou
C<Décadi> étaient manipulées par Perl comme étant des chaînes ISO-8859
C<VendÂ©miaire>  et C<DÂ©cadi>  mais  qu'elles apparaissaient  ensuite
comme une chaîne UTF-8 normale dans un xterm configuré en UTF-8.

=head1 AUTHOR / AUTEUR

Jean Forget, JFORGET (à) cpan.org

=head1 LICENSE AND COPYRIGHT / LICENCE ET COPYRIGHT

(C) Jean Forget, 2014, all rights reserved.

The  terms of  license for  this script  are the  same as  Perl's: GNU
General Public License (GPL) and Artistic License.

(C) Jean Forget, 2014, tous droits réservés.

Les termes  de licence  de ce  script sont les  mêmes termes  que pour
S<Perl :> GNU General Public License (GPL) et Artistic License.

=cut
