# -*- encoding: utf-8; indent-tabs-mode: nil -*-
#
# Generating the list of feasts for cal-french.el from Emacs and other similar programs
# Génération de la liste des fêtes pour cal-french.el d'Emacs et pour d'autres programmes similaires
#
# Copyright (C) 2014, 2015, 2018, Jean Forget
#
# Author: Jean Forget
# Maintainer: Jean Forget
# Keywords: French Revolution, calendar, Emacs
#
# This program is free software; you can redistribute it and modify
# it under the terms of Perl:
# -- either the GNU General Public License as published by
#    the Free Software Foundation; version 1, or (at your option)
#    any later version,
# -- or the Artistic Licence.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Emacs; see the file COPYING. If not, see <http://www.gnu.org/licenses/>.

use utf8;
use v5.10;
use strict;
use warnings;
use Getopt::Long;
use DateTime::Calendar::FrenchRevolutionary;

my $lang = 'lisp';

Getopt::Long::GetOptions('lang:s'  => \$lang,
    ) or die "Problème avec les options";
$lang = lc($lang);
if ($lang ne 'lisp' && $lang ne 'apl' && $lang ne 'pascal') {
  die "Unknown language: '$lang'";
}

my @feast_multi;
my @feast_single;
my $max_multi  = 0;
my $max_single = 0;

my %m2s = qw(À A` Â A^ É E' È E` Ê E^ Ë E\\" Î I^ Ï I\\" Ô O^ Ù U` Û U^ œ oe
             à a` â a^ é e' è e` ê e^ ë e\\" î i^ ï i\\" ô o^ ù u` û u^ Œ Oe); # mutibyte to single byte
# Perl is annoyed when entering commas in qw() constructs, so:
$m2s{'ç'} = "c,";
$m2s{'Ç'} = "C,";
my $multi = join '', keys %m2s;

binmode STDOUT, ":utf8";

for my $month (1..12) {
  store_month($month);
  for my $day (1..30) {
    store_day($month, $day);
  }
}
store_month(13);
for my $day (1..6) {
  store_day(13, $day);
}
if ($lang eq 'lisp') {
  # Some disagreement between cal-french.el and DateTime::Calendar::FrenchRevolutionary
  $feast_multi [-3] = q("de la Raison");
  $feast_single[-3] = q("de la Raison");
  push @feast_multi,  ('') x 4; # to get a multiple of 5
  push @feast_single, ('') x 4; # to get a multiple of 5
}

my $format;
given ($lang) {
  when ('lisp') {
    $format = sprintf("%%-%ds ", $max_single) x 4 . " %s\n";
    retrieve($format, @feast_single);

    $format = sprintf("%%-%ds ", $max_multi) x 4 . " %s\n";
    retrieve($format, @feast_multi);
  }
  when ('apl') {
    say "V ← ''";
    $format = "V ← V, %s\n";
    retrieve($format, @feast_multi);
    $max_multi -= 2; # because the quotes delimiters were included in the string length
    say "R ← 366 $max_multi ⍴ V";
  }
  when ('pascal') {
    $format = "      %3d : ch := %s;\n";
    retrieve($format, @feast_multi);
  }
}

sub store_month {
  my ($month) = @_;
  my $date = DateTime::Calendar::FrenchRevolutionary->new(year => 220, month => $month, day => 1, locale => 'fr');
  my $marker;
  given ($lang) {
    when ("lisp"   ) { $marker = ";;"; }
    when ("apl"    ) { $marker = "⍝"; }
    when ("pascal" ) { $marker = "{"; }
  }
  my $comment = $date->strftime("$marker %B");
  push @feast_multi,  $comment;
  push @feast_single, $comment;
}
sub store_day {
  my ($month, $day) = @_;
  my $date = DateTime::Calendar::FrenchRevolutionary->new(year => 220, month => $month, day => $day, locale => 'fr');
  my $feast = $date->strftime(qq{"%EJ"});
  if ($lang eq 'pascal') {
    $feast  = $date->strftime(qq{"%Ej"});
  }
  $feast =~ s/^"Jour /"/i;
  if (length($feast) > $max_multi) {
    $max_multi = length($feast);
  }
  push @feast_multi,  $feast;

  $feast =~  s/([$multi])/$m2s{$1}/g;
  if (length($feast) > $max_single) {
    $max_single = length($feast);
  }
  push @feast_single, $feast;
}
sub retrieve {
  my ($format, @list) = @_;
  my $nb_j = 0;
  while (@list) {
    my $marker;
    given ($lang) {
      when ("lisp"   ) { $marker = ";"; }
      when ("apl"    ) { $marker = "⍝"; }
      when ("pascal" ) { $marker = "{"; }
    }
    my $c1 = shift @list;
    if (substr($c1, 0, length($marker)) eq $marker) {
      if ($lang ne 'pascal') {
        say $c1;
      }
      else {
        say "          $c1 }";
      }
    }
    elsif ($lang eq 'lisp') {
      my $c2 = shift @list;
      my $c3 = shift @list;
      my $c4 = shift @list;
      my $c5 = shift @list;
      printf($format, $c1, $c2, $c3, $c4, $c5);
    }
    elsif ($lang eq 'apl') {
      my $delta = $max_multi - length($c1);
      if ($delta > 0) {
        substr($c1, -1, 0) = ' ' x ($delta);
      }
      $c1 =~ s/'/''/g; # inner single quotes (string characters) are doubled
      $c1 =~ s/"/'/g;  # outer quotes (string delimiters) are single quotes too
      # ... we rely on the fact there are no inner double quotes
      printf($format, $c1);
    }
    elsif ($lang eq 'pascal') {
      $c1 =~ s/'/''/g; # inner single quotes (string characters) are doubled
      $c1 =~ s/"/'/g;  # outer quotes (string delimiters) are single quotes too
      # ... we rely on the fact there are no inner double quotes
      printf($format, ++$nb_j, $c1);
    }
  }
}
__END__ 

=encoding utf8

=head1 NAME / NOM

gen-feasts -- a program to generate the list of feasts for F<cal-french.el>

gen-feasts -- un programme pour générer la liste des fêtes pour F<cal-french.el>

=head1 UTILISATION

  gen-feasts --lang=lisp
  gen-feasts --lang=apl
  gen-feasts --lang=pascal

=head1 CALL PARAMETERS / PARAMÈTRES D'APPEL

=over 4

=item lang

Target language. For the moment, the only accepted languages are Lisp, APL and Pascal.

Langage de destination. Pour l'instant, seuls Lisp, APL et Pascal sont acceptés.

=back

=head1 DESCRIPTION (ENGLISH)

This program generates the list  of feasts in the French Revolutionary
calendar, for inclusion in a Lisp, APL or Pascal program.

=head1 DESCRIPTION (FRANCAIS)

Ce programme génère la liste des fêtes du calendrier républicain, pour
l'inclure dans un programme Lisp, APL ou Pascal.

=head1 CONFIGURATION ET ENVIRONNEMENT

None.

Néant.

=head1 DEPENDENCIES / DÉPENDANCES

F<DateTime>

F<DateTime::Calendar::FrenchRevolutionary> version 0.12

v5.10 : C<say>, F<Getopt::Long> (core module)

=head1 INCOMPATIBILITIES / INCOMPATIBILITÉS

No known incompatibilities.

Aucune incompatibilité identifiée.

=head1 BUGS AND LIMITS

No known bugs in this script.

Yet,   this  program   pointed  out   a   bug  in   version  0.11   of
F<DateTime::Calendar::FrenchRevolutionary>.   The lack of  C<use utf8>
meant that strings as C<Vendémiaire>  or C<Décadi> would be handled by
Perl as ISO-8859 strings C<VendÂ©miaire> and C<DÂ©cadi> but they would
still  be displayed  as correct  UTF-8 strings  on  a UTF-8-configured
xterm.

=head1 BOGUES ET LIMITES

Aucune erreur identifiée dans ce script.

En revanche,  ce programme a  permis d'identifier un problème  dans la
version 0.11 de F<DateTime::Calendar::FrenchRevolutionary>.  L'absence
de C<use  utf8> faisait que  les chaînes telles que  C<Vendémiaire> ou
C<Décadi> étaient manipulées par Perl comme étant des chaînes ISO-8859
C<VendÂ©miaire>  et C<DÂ©cadi>  mais  qu'elles apparaissaient  ensuite
comme une chaîne UTF-8 normale dans un xterm configuré en UTF-8.

=head1 AUTHOR / AUTEUR

Jean Forget, JFORGET (à) cpan.org

=head1 SEE ALSO

=head2 Software

=head3 By me

L<DateTime::Calendar::FrenchRevolutionary> or L<https://github.com/jforget/DateTime-Calendar-FrenchRevolutionary>

L<Date::Convert::French_Rev> or L<https://github.com/jforget/Date-Convert-French_Rev>

L<https://www.gnu.org/software/apl/Bits_and_Pieces/calfr.apl.html> or L<https://github.com/jforget/apl-calendar-french>

L<https://www.hpcalc.org/details/7309> or L<https://github.com/jforget/hp48-hp50-French-Revolutionary-calendar>

L<https://github.com/jforget/hp41-calfr>

L<https://github.com/jforget/Pascal-French-Revolutionary-Calendar>

=head3 Only partly by me

L<https://github.com/jforget/emacs-lisp-cal-french>, a fork of F<calendar/cal-french.el> in Emacs

=head3 Not by me

CALENDRICA 3.0 -- Common Lisp, which can be download in the "Resources" section of
L<http://www.cambridge.org/us/academic/subjects/computer-science/computing-general-interest/calendrical-calculations-3rd-edition?format=PB&isbn=9780521702386>

French Calendar for Android at
L<https://f-droid.org/packages/ca.rmen.android.frenchcalendar/>
or L<https://github.com/caarmen/FRCAndroidWidget>
and L<https://github.com/caarmen/french-revolutionary-calendar>

Thermidor for Android at L<https://github.com/jhbadger/Thermidor-Android>

A Ruby program at L<https://github.com/jhbadger/FrenchRevCal-ruby>

=head2 Books

Quid 2001, M and D Frémy, publ. Robert Laffont

Agenda Républicain 197 (1988/89), publ. Syros Alternatives

Any French schoolbook about the French Revolution

The French Revolution, Thomas Carlyle, Oxford University Press

Calendrier Militaire, anonymous

Calendrical Calculations (Third Edition) by Nachum Dershowitz and
Edward M. Reingold, Cambridge University Press, see
L<http://www.calendarists.com>
or L<http://www.cambridge.org/us/academic/subjects/computer-science/computing-general-interest/calendrical-calculations-3rd-edition?format=PB&isbn=9780521702386>.

=head2 Internet

L<http://www.faqs.org/faqs/calendars/faq/part3/>

L<http://datetime.mongueurs.net/>

L<http://www.allhotelscalifornia.com/kokogiakcom/frc/default.asp>

L<https://en.wikipedia.org/wiki/French_Republican_Calendar>

L<http://prairial.free.fr/calendrier/calendrier.php?lien=sommairefr> (in French)

=head1 LICENSE AND COPYRIGHT / LICENCE ET COPYRIGHT

(C) Jean Forget, 2014, 2015, 2018, all rights reserved.

The  terms of  license for  this script  are the  same as  Perl's: GNU
General Public License (GPL) and Artistic License.

(C) Jean Forget, 2014, 2015, 2018, tous droits réservés.

Les termes  de licence  de ce  script sont les  mêmes termes  que pour
S<Perl :> GNU General Public License (GPL) et Artistic License.

=cut
